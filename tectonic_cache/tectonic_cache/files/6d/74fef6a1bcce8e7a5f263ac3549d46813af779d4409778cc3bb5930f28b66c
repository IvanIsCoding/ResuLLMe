%%
%% This is file `microtype.cfg',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% microtype.dtx  (with options: `config,cfg-t,m-t')
%% 
%% ------------------------------------------------------------------------
%% 
%%                       The `microtype' package
%%         Subliminal refinements towards typographical perfection
%%           Copyright (c) 2004--2022 R Schlicht <w.m.l@gmx.net>
%% 
%% This work may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License, either version 1.3c of this license or (at
%% your option) any later version. The latest version of this license is in:
%% https://www.latex-project.org/lppl.txt, and version 1.3c or later is part
%% of all distributions of LaTeX version 2005/12/01 or later.
%% 
%% This work has the LPPL maintenance status `maintained'.
%% 
%% This work consists of the files microtype.dtx, microtype-utf.dtx and
%% microtype.ins and the derived files microtype.sty, microtype-pdftex.def,
%% microtype-luatex.def, microtype-xetex.def, microtype.lua, letterspace.sty
%% and microtype-show.sty.
%% 
%% ------------------------------------------------------------------------
%%   This is the main configuration file for the `microtype' package.
%%   It contains settings for font expansion and character protrusion,
%%   tracking, interword spacing and additional kerning, as well as
%%   character inheritance and font set declarations.
%%   You may customise these settings here, or in a different file.
%%   Please consult the documentation for details.
%% 
%%   If you think you have found improvements to these settings, please
%%   let me know.
%% 
%%   When modifying this file, also change the identification line below.
%% ------------------------------------------------------------------------ 
%%
\ProvidesFile
  {microtype.cfg}
  [2022/03/14 v3.0d
   microtype main configuration file
   (RS)]

%%% -----------------------------------------------------------------------
%%% FONT SETS

\DeclareMicrotypeSet{all}
   { }

\DeclareMicrotypeSet{allmath}
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,EU1,EU2,TU,TS1,OML,OMS,U} }

\DeclareMicrotypeSet{alltext}
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,TS1,EU1,EU2,TU} }

\DeclareMicrotypeSet{allmath-nott}
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,EU1,EU2,TU,TS1,OML,OMS,U},
     family   = {rm*,sf*}
   }

\DeclareMicrotypeSet{alltext-nott}
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,TS1,EU1,EU2,TU},
     family   = {rm*,sf*}
   }

\DeclareMicrotypeSet{basicmath}
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,EU1,EU2,TU,OML,OMS},
     family   = {rm*,sf*},
     series   = {md*},
     size     = {normalsize,footnotesize,small,large}
   }

\DeclareMicrotypeSet{basictext}
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,EU1,EU2,TU},
     family   = {rm*,sf*},
     series   = {md*},
     size     = {normalsize,footnotesize,small,large}
   }

\DeclareMicrotypeSet{smallcaps}
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,TS1,EU1,EU2,TU},
     shape    = {sc*,si,scit}
   }

\DeclareMicrotypeSet{footnotesize}
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,TS1,EU1,EU2,TU},
     size     = {-small}
   }

\DeclareMicrotypeSet{scriptsize}
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,TS1,EU1,EU2,TU},
     size     = {-footnotesize}
   }

\DeclareMicrotypeSet{normalfont}
   { font = */*/*/*/* }

%%% -----------------------------------------------------------------------
%%% DEFAULT SETS

\DeclareMicrotypeSetDefault[protrusion]{alltext}
\DeclareMicrotypeSetDefault[expansion] {alltext-nott}
\DeclareMicrotypeSetDefault[spacing]   {alltext-nott}
\DeclareMicrotypeSetDefault[kerning]   {alltext}
\DeclareMicrotypeSetDefault[tracking]  {smallcaps}

%%% -----------------------------------------------------------------------
%%% FONT VARIANTS AND ALIASES

\DeclareMicrotypeVariants{x,j,w,a,d,0,1,-LF,-TLF,-OsF,-TOsF}

\MT@if@false
\ifx\UnicodeEncodingName\@undefined\else
  \MT@ifstreq{\encodingdefault}{\UnicodeEncodingName}\MT@if@true\relax
\fi
\ifMT@fontspec\MT@if@true\fi
\ifMT@if@
%% -- Computer/Latin Modern Roman
\DeclareMicrotypeAlias{lmr}{Latin Modern Roman}
  \else
\DeclareMicrotypeAlias{lmr}{cmr}           % lmodern
\fi
\DeclareMicrotypeAlias{lmsy}{cmsy}         %   "
\DeclareMicrotypeAlias{lmm} {cmm}          %   "
\DeclareMicrotypeAlias{aer} {cmr}          % ae
\DeclareMicrotypeAlias{zer} {cmr}          % zefonts
\DeclareMicrotypeAlias{cmor}{cmr}          % eco
\DeclareMicrotypeAlias{hfor}{cmr}          % hfoldsty
\DeclareMicrotypeAlias{mlmr}{cmr}          % mlmodern
\DeclareMicrotypeAlias{mlmsy}{cmsy}        %   "
\DeclareMicrotypeAlias{mlmm} {cmm}         %   "
\DeclareMicrotypeAlias{NewCM10-Book.otf}   {New Computer Modern}
\DeclareMicrotypeAlias{NewCM10-Regular.otf}{New Computer Modern}
\DeclareMicrotypeAlias{CMU Serif}          {New Computer Modern}
%% -- Palatino
\DeclareMicrotypeAlias{pxr} {ppl}          % pxfonts
\DeclareMicrotypeAlias{qpl} {ppl}          % TeX Gyre Pagella (formerly: qfonts/QuasiPalatino)
\DeclareMicrotypeAlias{fp9x}{pplx}         % FPL Neu
\DeclareMicrotypeAlias{fp9j}{pplj}         %    "
\DeclareMicrotypeAlias{zpllf}{pplx}        % newpxtext
\DeclareMicrotypeAlias{zplosf}{pplj}       %    "
\DeclareMicrotypeAlias{zpltlf}{pplx}       %    "
\DeclareMicrotypeAlias{zpltosf}{pplj}      %    "
\DeclareMicrotypeAlias{Domitian-TLF} {pplx}% domitian
\DeclareMicrotypeAlias{Domitian-TOsF}{pplj}%    "
\DeclareMicrotypeAlias{Palatino Linotype}{Palatino}
\DeclareMicrotypeAlias{Palatino LT Std}  {Palatino}
\DeclareMicrotypeAlias{TeX Gyre Pagella} {Palatino}
\DeclareMicrotypeAlias{Domitian}         {Palatino}
\DeclareMicrotypeAlias{Asana Math}       {Palatino}
%% -- Times New Roman
\DeclareMicrotypeAlias{txr}{ptm}           % txfonts
\DeclareMicrotypeAlias{ntxlf}{ptmx}        % newtxtext
\DeclareMicrotypeAlias{ntxosf}{ptmj}       %    "
\DeclareMicrotypeAlias{ntxtlf}{ptmx}       %    "
\DeclareMicrotypeAlias{ntxtosf}{ptmj}      %    "
\DeclareMicrotypeAlias{Tempora-TLF} {ptmx} % tempora
\DeclareMicrotypeAlias{Tempora-TOsF}{ptmj} %    "
\DeclareMicrotypeAlias{qtm}{ptm}           % TeX Gyre Termes (formerly: qfonts/QuasiTimes)
\DeclareMicrotypeAlias{STEP-TLF} {ptmx}    % step
\DeclareMicrotypeAlias{STEP-TOsF}{ptmj}    %   "
\DeclareMicrotypeAlias{stix} {ptm}         % stix
\DeclareMicrotypeAlias{stix2}{ptm}         % stix2
%% -- Charter
\DeclareMicrotypeAlias{chr}{bch}           % CH Math
\DeclareMicrotypeAlias{XCharter-TLF} {bch} % XCharter
\DeclareMicrotypeAlias{XCharter-TOsF}{bch} %    "
\DeclareMicrotypeAlias{mdbch}{bch}         % mathdesign/Charter
%% -- Garamond
\DeclareMicrotypeAlias{mdugm}{ugm}         % mathdesign/URW Garamond
\DeclareMicrotypeAlias{zgmx}{ugm}          % garamondx
\DeclareMicrotypeAlias{zgmj}{ugm}          %    "
\DeclareMicrotypeAlias{zgmI}{ugm}          %    "
\DeclareMicrotypeAlias{zgmq}{ugm}          %    "
\DeclareMicrotypeAlias{pad} {EBGaramond-LF}% Adobe Garamond
\DeclareMicrotypeAlias{padx}{EBGaramond-TLF}%   "
\DeclareMicrotypeAlias{padj}{EBGaramond-TOsF}%  "
%% --
\DeclareMicrotypeAlias{ulg}{blg}           % URW LetterGothic -> Bitstream LetterGothic12Pitch
\DeclareMicrotypeAlias{zeur}{eur}          % Euler VM
\DeclareMicrotypeAlias{zeus}{eus}          %    "
\DeclareMicrotypeAlias{zpeus}   {zpeu}     % Adobe Euro sans -> serif
\DeclareMicrotypeAlias{eurosans}{zpeu}     % Adobe Euro sans -> serif
\DeclareMicrotypeAlias{Lato}             {TU-basic}
\DeclareMicrotypeAlias{Lato-Regular}     {TU-basic}
\DeclareMicrotypeAlias{Fontin}           {TU-basic}
\DeclareMicrotypeAlias{Fontin-Regular}   {TU-basic}
\DeclareMicrotypeAlias{Bergamo Std}      {TU-basic}
\DeclareMicrotypeAlias{FontAwesome}      {TU-empty} % fontawesome
\DeclareMicrotypeAlias{fontawesomefree}  {TU-empty} % fontawesome5
\DeclareMicrotypeAlias{fontawesomepro}   {TU-empty}
\DeclareMicrotypeAlias{fontawesomebrands}{TU-empty}

%%% -----------------------------------------------------------------------
%%% INTERACTION WITH THE `babel' PACKAGE

\DeclareMicrotypeBabelHook
   {english,UKenglish,british,USenglish,american}
   {kerning=, spacing=nonfrench}

\DeclareMicrotypeBabelHook
   {french,francais,acadian,canadien}
   {kerning=french, spacing=}

\DeclareMicrotypeBabelHook
   {turkish}
   {kerning=turkish, spacing=}

%%% -----------------------------------------------------------------------
%%% CHARACTER INHERITANCE

\DeclareCharacterInheritance
   { encoding = OT1 }
   { f = {011}, % ff
     i = {\i},
     j = {\j},
     O = {\O},
     o = {\o}
   }

\DeclareCharacterInheritance
   { encoding = T1 }
   { A = {\`A,\'A,\^A,\~A,\"A,\r A,\k A,\u A},
     a = {\`a,\'a,\^a,\~a,\"a,\r a,\k a,\u a},
     C = {\'C,\c C,\v C},
     c = {\'c,\c c,\v c},
     D = {\v D,\DH},
     d = {\v d,\dj},
     E = {\`E,\'E,\^E,\"E,\k E,\v E},
     e = {\`e,\'e,\^e,\"e,\k e,\v e},
     f = {027}, % ff
     G = {\u G},
     g = {\u g},
     I = {\`I,\'I,\^I,\"I,\.I},
     i = {\`i,\'i,\^i,\"i,\i},
     j = {\j},
     L = {\L,\'L,\v L},
     l = {\l,\'l,\v l},
     N = {\'N,\~N,\v N},
     n = {\'n,\~n,\v n},
     O = {\O,\`O,\'O,\^O,\~O,\"O,\H O},
     o = {\o,\`o,\'o,\^o,\~o,\"o,\H o},
     R = {\'R,\v R},
     r = {\'r,\v r},
     S = {\'S,\c S,\v S,\SS},
     s = {\'s,\c s,\v s},
     T = {\c T,\v T},
     t = {\c t,\v t},
     U = {\`U,\'U,\^U,\"U,\H U,\r U},
     u = {\`u,\'u,\^u,\"u,\H u,\r u},
     Y = {\'Y,\"Y},
     y = {\'y,\"y},
     Z = {\'Z,\.Z,\v Z},
     z = {\'z,\.z,\v z}
   }

\DeclareCharacterInheritance
   { encoding = LY1 }
   { A = {\`A,\'A,\^A,\~A,\"A,\r A},
     a = {\`a,\'a,\^a,\~a,\"a,\r a},
     C = {\c C},
     c = {\c c},
     D = {\DH},
     E = {\`E,\'E,\^E,\"E},
     e = {\`e,\'e,\^e,\"e},
     f = {011}, % ff
     I = {\`I,\'I,\^I,\"I},
     i = {\`i,\'i,\^i,\"i,\i},
     L = {\L},
     l = {\l},
     N = {\~N},
     n = {\~n},
     O = {\`O,\'O,\^O,\~O,\"O,\O},
     o = {\`o,\'o,\^o,\~o,\"o,\o},
     S = {\v S},
     s = {\v s},
     U = {\`U,\'U,\^U,\"U},
     u = {\`u,\'u,\^u,\"u},
     Y = {\'Y,\"Y},
     y = {\'y,\"y},
     Z = {\v Z},
     z = {\v z}
   }

\DeclareCharacterInheritance
   { encoding = OT4 }
   { A = {\k A},
     a = {\k a},
     C = {\'C},
     c = {\'c},
     E = {\k E},
     e = {\k e},
     f = {011}, % ff
     i = {\i},
     j = {\j},
     L = {\L},
     l = {\l},
     N = {\'N},
     n = {\'n},
     O = {\O,\'O},
     o = {\o,\'o},
     S = {\'S},
     s = {\'s},
     Z = {\'Z,\.Z},
     z = {\'z,\.z},
     \textquotedblleft = "FF
   }

\DeclareCharacterInheritance
   { encoding = QX }
   { A = {\`A,\'A,\^A,\~A,\"A,\k A,\AA},
     a = {\`a,\'a,\^a,\~a,\"a,\k a,\aa},
     C = {\'C,\c C},
     c = {\'c,\c c},
     D = {\DH},
     E = {\`E,\'E,\^E,\"E,\k E},
     e = {\`e,\'e,\^e,\"e,\k e},
     f = {011}, % ff
     I = {\`I,\'I,\^I,\"I,\k I},
     i = {\`i,\'i,\^i,\"i,\k i,\i},
     j = {\j},
     L = {\L},
     l = {\l},
     N = {\'N,\~N},
     n = {\'n,\~n},
     O = {\O,\`O,\'O,\^O,\~O,\"O},
     o = {\o,\`o,\'o,\^o,\~o,\"o},
     S = {\'S,\c S,\textcommabelow S,\v S},
     s = {\'s,\c s,\textcommabelow s,\v s},
     T = {\c T,\textcommabelow T},
     t = {\c t,\textcommabelow t},
     U = {\`U,\'U,\^U,\"U,\k U},
     u = {\`u,\'u,\^u,\"u,\k u},
     Y = {\'Y,\"Y},
     y = {\'y,\"y},
     Z = {\'Z,\.Z,\v Z},
     z = {\'z,\.z,\v z},
     . = \textellipsis
   }

\DeclareCharacterInheritance
   { encoding = T5 }
   { A = {\`A,\'A,\~A,\h A,\d A,\^A,\u A,
          \`\Acircumflex,\'\Acircumflex,\~\Acircumflex,\h\Acircumflex,\d\Acircumflex,
          \`\Abreve,\'\Abreve,\~\Abreve,\h\Abreve,\d\Abreve},
     a = {\`a,\'a,\~a,\h a,\d a,\^a,\u a,
          \`\acircumflex,\'\acircumflex,\~\acircumflex,\h\acircumflex,\d\acircumflex,
          \`\abreve,\'\abreve,\~\abreve,\h\abreve,\d\abreve},
     D = {\DJ},
     d = {\dj},
     E = {\`E,\'E,\~E,\h E,\d E,\^E,
          \`\Ecircumflex,\'\Ecircumflex,\~\Ecircumflex,\h\Ecircumflex,\d\Ecircumflex},
     e = {\`e,\'e,\~e,\h e,\d e,\^e,
          \`\ecircumflex,\'\ecircumflex,\~\ecircumflex,\h\ecircumflex,\d\ecircumflex},
     I = {\`I,\'I,\~I,\h I,\d I},
     i = {\`i,\'i,\~i,\h i,\d i,\i},
     O = {\`O,\'O,\~O,\h O,\d O,\^O,\horn O,
          \`\Ocircumflex,\'\Ocircumflex,\~\Ocircumflex,\h\Ocircumflex,\d\Ocircumflex,
          \`\Ohorn,\'\Ohorn,\~\Ohorn,\h\Ohorn,\d\Ohorn},
     o = {\`o,\'o,\~o,\h o,\d o,\^o,\horn o,
          \`\ocircumflex,\'\ocircumflex,\~\ocircumflex,\h\ocircumflex,\d\ocircumflex,
          \`\ohorn,\'\ohorn,\~\ohorn,\h\ohorn,\d\ohorn},
     U = {\`U,\'U,\~U,\h U,\d U,\horn U,
          \`\Uhorn,\'\Uhorn,\~\Uhorn,\h\Uhorn,\d\Uhorn},
     u = {\`u,\'u,\~u,\h u,\d u,\horn u,
          \`\uhorn,\'\uhorn,\~\uhorn,\h\uhorn,\d\uhorn},
     Y = {\`Y,\'Y,\~Y,\h Y,\d Y},
     y = {\`y,\'y,\~y,\h y,\d y}
   }

\DeclareCharacterInheritance
   { encoding = {TU,EU1,EU2} }
   { A = {\`A,\'A,\^A,\~A,\"A,\r A,\k A,\u A},
     a = {\`a,\'a,\^a,\~a,\"a,\r a,\k a,\u a},
     C = {\'C,\c C,\v C},
     c = {\'c,\c c,\v c},
     D = {\v D,\DH},
     d = {\v d,\dj},
     E = {\`E,\'E,\^E,\"E,\k E,\v E},
     e = {\`e,\'e,\^e,\"e,\k e,\v e},
     G = {\u G},
     g = {\u g},
     I = {\`I,\'I,\^I,\"I,\.I},
     i = {\`i,\'i,\^i,\"i,\i},
     L = {\L,\'L,\v L},
     l = {\l,\'l,\v l},
     N = {\'N,\~N,\v N},
     n = {\'n,\~n,\v n},
     O = {\O,\`O,\'O,\^O,\~O,\"O,\H O},
     o = {\o,\`o,\'o,\^o,\~o,\"o,\H o},
     R = {\'R,\v R},
     r = {\'r,\v r},
     S = {\'S,\c S,\v S}, % \SS
     s = {\'s,\c s,\v s},
     T = {\c T,\v T},
     t = {\c t,\v t},
     U = {\`U,\'U,\^U,\"U,\H U,\r U},
     u = {\`u,\'u,\^u,\"u,\H u,\r u},
     Y = {\'Y,\"Y},
     y = {\'y,\"y},
     Z = {\'Z,\.Z,\v Z},
     z = {\'z,\.z,\v z}
   }

\DeclareCharacterInheritance
  { encoding = LGR,
  }
  {
    A = {012},
    I = {219},
    O = J,
    U = {013,223},
    W = {011},
    a = {014,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,
         144,145,146,148,149,150,248},
    e = {224,225,226,227,232,233,234,235},
    h = {152,153,154,156,157,158,160,161,162,163,164,165,166,167,168,169,170,
         171,172,173,174,175,249},
    i = {200,201,202,203,208,209,210,211,216,217,218,240,241,242,243},
    o = {228,229,230,231,236,237,238,239},
    r = {251,252},
    u = {015,204,205,206,207,212,213,214,215,220,221,222,244,245,246,247},
    w = {176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,
         193,194,196,197,198,250},
    . = {059}  % ano teleia
  }

%%% -----------------------------------------------------------------------
%%% TRACKING/LETTERSPACING

\SetTracking
  [ name         = default,
    no ligatures = {f} ]
  { encoding     = {OT1,T1,T2A,LY1,OT4,QX,EU2,TU} }
  { }

%%% -----------------------------------------------------------------------
%%% EXPANSION

\SetExpansion
   [ name     = default      ]
   { encoding = {OT1,OT4,QX,T1,LY1} }
   {
     A = 500,     a = 700,
   \AE = 500,   \ae = 700,
     B = 700,     b = 700,
     C = 700,     c = 700,
     D = 500,     d = 700,
     E = 700,     e = 700,
     F = 700,
     G = 500,     g = 700,
     H = 700,     h = 700,
     K = 700,     k = 700,
     M = 700,     m = 700,
     N = 700,     n = 700,
     O = 500,     o = 700,
   \OE = 500,   \oe = 700,
     P = 700,     p = 700,
     Q = 500,     q = 700,
     R = 700,
     S = 700,     s = 700,
     U = 700,     u = 700,
     W = 700,     w = 700,
     Z = 700,     z = 700,
     2 = 700,
     3 = 700,
     6 = 700,
     8 = 700,
     9 = 700
   }

\SetExpansion
   [ name     = T2A ]
   { encoding = T2A }
   {
     A = 500,     a = 700,
     B = 700,     b = 700,
     C = 700,     c = 700,
     D = 500,     d = 700,
     E = 700,     e = 700,
     F = 700,
     G = 500,     g = 700,
     H = 700,     h = 700,
     K = 700,     k = 700,
     M = 700,     m = 700,
     N = 700,     n = 700,
     O = 500,     o = 700,
     P = 700,     p = 700,
     Q = 500,     q = 700,
     R = 700,
     S = 700,     s = 700,
     U = 700,     u = 700,
     W = 700,     w = 700,
     Z = 700,     z = 700,
     2 = 700,
     3 = 700,
     6 = 700,
     8 = 700,
     9 = 700,
     \CYRA = 500,     \cyra = 700,
     \CYRB = 700,     \cyrb = 700,
     \CYRV = 700,     \cyrv = 700,
     \CYRG = 700,     \cyrg = 700,
     \CYRD = 700,     \cyrd = 700,
     \CYRE = 700,     \cyre = 700,
     \CYRZH = 700,    \cyrzh = 700,
     \CYRZ = 700,     \cyrz = 700,
     \CYRI = 700,     \cyri = 700,
     \CYRISHRT = 700, \cyrishrt = 700,
     \CYRK = 700,     \cyrk = 700,
     \CYRL = 700,     \cyrl = 700,
     \CYRM = 700,     \cyrm = 700,
     \CYRN = 700,     \cyrn = 700,
     \CYRO = 500,     \cyro = 700,
     \CYRP = 700,     \cyrp = 700,
     \CYRR = 700,     \cyrr = 700,
     \CYRS = 700,     \cyrs = 700,
     \CYRT = 700,     \cyrt = 700,
     \CYRU = 700,     \cyru = 700,
     \CYRF = 700,     \cyrf = 700,
     \CYRH = 700,     \cyrh = 700,
     \CYRC = 700,     \cyrc = 700,
     \CYRCH = 700,    \cyrch = 700,
     \CYRSH = 700,    \cyrsh = 700,
     \CYRSHCH = 700,  \cyrshch = 700,
     \CYRHRDSN = 700, \cyrhrdsn = 700,
     \CYRERY = 700,   \cyrery = 700,
     \CYRSFTSN = 700, \cyrsftsn = 700,
     \CYREREV = 700,  \cyrerev = 700,
     \CYRYU = 700,    \cyryu = 700,
     \CYRYA = 700,    \cyrya = 700
   }

\SetExpansion
   [ name     = T5 ]
   { encoding = T5 }
   {
     A = 500,     a = 700,
     B = 700,     b = 700,
     C = 700,     c = 700,
     D = 500,     d = 700,
     E = 700,     e = 700,
     F = 700,
     G = 500,     g = 700,
     H = 700,     h = 700,
     K = 700,     k = 700,
     M = 700,     m = 700,
     N = 700,     n = 700,
     O = 500,     o = 700,
     P = 700,     p = 700,
     Q = 500,     q = 700,
     R = 700,
     S = 700,     s = 700,
     U = 700,     u = 700,
     W = 700,     w = 700,
     Z = 700,     z = 700,
     2 = 700,
     3 = 700,
     6 = 700,
     8 = 700,
     9 = 700
   }

%%% -----------------------------------------------------------------------
%%% PROTRUSION

\SetProtrusion
   [ name     = default ]
   { }
   {
     A = {50,50},
     F = {  ,50},
     J = {50,  },
     K = {  ,50},
     L = {  ,50},
     T = {50,50},
     V = {50,50},
     W = {50,50},
     X = {50,50},
     Y = {50,50},
     k = {  ,50},
     r = {  ,50},
     v = {50,50},
     w = {50,50},
     x = {50,50},
     y = {  ,50},
     1 = {50,50},
     4 = {50,50},
     7 = {50,50},
     . = { ,700},
    {,}= { ,500},
     : = { ,500},
     ; = { ,300},
     ! = { ,100},
     ? = { ,100},
     @ = {50,50},
     ~ = {200,250},
    \% = {50,50},
     * = {200,200},
     + = {250,250},
     ( = {100,   },    ) = {   ,200},
     / = {100,200},
     - = {500,500},
     \textendash       = {200,200},   \textemdash        = {150,150},
     \textquoteleft    = {300,400},   \textquoteright    = {300,400},
     \textquotedblleft = {300,300},   \textquotedblright = {300,300}
   }

\SetProtrusion
   [ name     = OT1-default,
     load     = default ]
   { encoding = OT1 }
   {
     \AE = {50,   },
   }

\SetProtrusion
   [ name     = T1-default,
     load     = default     ]
   { encoding = {T1,LY1,EU1,EU2,TU} }
   {
     \AE = {50,  },
       _ = {100,100},
     \textbackslash    = {100,200},
     \quotesinglbase   = {400,400},   \quotedblbase      = {400,400},
     \guilsinglleft    = {400,300},   \guilsinglright    = {300,400},
     \guillemotleft    = {200,200},   \guillemotright    = {200,200},
     \textexclamdown   = {100,   },   \textquestiondown  = {100,   },
     \textbraceleft    = {400,200},   \textbraceright    = {200,400},
     \textless         = {200,100},   \textgreater       = {100,200}
   }

\SetProtrusion
   [ name     = T2A-default,
     load     = default     ]
   { encoding = T2A,
   }
   {
     \CYRA = {50,50},
     \CYRG = {  ,50},
     \CYRK = {  ,50},
     \CYRT = {50,50},
     \CYRH = {50,50},
     \CYRU = {50,50},
     \cyrk = {  ,50},
     \cyrg = {  ,50},
     \cyrh = {50,50},
     \cyru = {50,50},
        _  = {100,100},
     \textbackslash    = {100,200},   \quotedblbase      = {400,400},
     \guillemotleft    = {200,200},   \guillemotright    = {200,200},
     \textbraceleft    = {400,200},   \textbraceright    = {200,400},
     \textless         = {200,100},   \textgreater       = {100,200}
   }

\SetProtrusion
   [ name     = QX-default,
     load     = default ]
   { encoding = QX }
   {
     \AE = {50,  },
     {=} = {100,100},
     \textunderscore   = {100,100},
     \textbackslash    = {100,200},
     \quotedblbase     = {400,400},
     \guillemotleft    = {200,200},   \guillemotright    = {200,200},
     \textexclamdown   = {100,   },   \textquestiondown  = {100,   },
     \textbraceleft    = {400,200},   \textbraceright    = {200,400},
     \textless         = {200,100},   \textgreater       = {100,200},
     \textminus        = {200,200},   \textdegree        = {300,300},
     \copyright        = {100,100},   \textregistered    = {100,100}
   }

\SetProtrusion
   [ name     = OT1-it   ]
   { encoding = OT1,
     shape    = {it,sl}  }
   {
     . = { ,500},
    {,}= { ,500},
     : = { ,300},
     ; = { ,300},
     & = {50,50},
    \% = {100, },
     * = {200,200},
     + = {150,200},
     @ = {50,50},
     ~ = {150,150},
     ( = {200, },    ) = {  ,200},
     / = {100,200},
     - = {300,300},
     \textendash       = {200,200},   \textemdash        = {150,150},
     \textquoteleft    = {400,200},   \textquoteright    = {400,200},
     \textquotedblleft = {400,200},   \textquotedblright = {400,200}
   }

\SetProtrusion
   [ name     = T1-it-default,
     load     = OT1-it   ]
   { encoding = {T1,LY1},
     shape    = {it,sl}  }
   {
     _ = {  ,100},
     \textbackslash    = {100,200},
     \quotesinglbase   = {300,700},   \quotedblbase      = {400,500},
     \guilsinglleft    = {400,400},   \guilsinglright    = {300,500},
     \guillemotleft    = {300,300},   \guillemotright    = {300,300},
     \textexclamdown   = {100,   },   \textquestiondown  = {200,   },
     \textbraceleft    = {200,100},   \textbraceright    = {200,200},
  }

\SetProtrusion
   [ name     = T2A-it-default,
     load     = OT1-it   ]
   { encoding = T2A,
     shape    = {it,sl}  }
   {
      _ = {  ,100},
     \textbackslash    = {100,200},   \quotedblbase      = {400,500},
     \guillemotleft    = {300,300},   \guillemotright    = {300,300},
     \textbraceleft    = {200,100},   \textbraceright    = {200,200},
  }

\SetProtrusion
   [ name     = QX-it-default,
     load     = OT1-it ]
   { encoding = {QX},
     shape    = {it,sl}  }
   {
     {=} = {100,100},
     \textunderscore   = {100,100},
     \textbackslash    = {100,200},
     \quotedblbase     = {300,400},
     \guillemotleft    = {300,300},   \guillemotright    = {300,300},
     \textexclamdown   = {200,   },   \textquestiondown  = {200,   },
     \textbraceleft    = {200,100},   \textbraceright    = {200,200},
     \textless         = {100,100},   \textgreater       = {100,100},
     \textminus        = {200,200},   \textdegree        = {300,150},
     \copyright        = {100,100},   \textregistered    = {100,100}
   }

\SetProtrusion
   [ name     = OT1-sc,
     load     = default ]
   { encoding = OT1,
     shape    = sc }
   {
     a = {50,50},
     f = {  ,50},
     j = {50,  },
     l = {  ,50},
   013 = {  ,50}, % fl
     r = {  , 0},
     t = {50,50},
     y = {50,50}
   }

\SetProtrusion
   [ name     = T1-sc,
     load     = T1-default ]
   { encoding = {T1,LY1},
     shape    = sc }
   {
     a = {50,50},
     f = {  ,50},
     j = {50,  },
     l = {  ,50},
   029 = {  ,50}, % fl
     r = {  , 0},
     t = {50,50},
     y = {50,50}
   }

\SetProtrusion
   [ name     = T2A-sc,
     load     = T2A-default ]
   { encoding = T2A,
     shape    = sc }
   {
     \cyra = {50,50},
     \cyrg = {  ,50},
     \cyrt = {50,50},
     \cyry = {  ,50}
   }

\SetProtrusion
   [ name     = QX-sc,
     load     = QX-default ]
   { encoding = QX,
     shape    = sc  }
   {
     a = {50,50},
     f = {  ,50},
     j = {50,  },
     l = {  ,50},
   013 = {  ,50}, % fl
     r = {  , 0},
     t = {50,50},
     y = {50,50}
   }

\SetProtrusion
   [ name     = textcomp ]
   { encoding = TS1      }
   {
     \textminus                = {200,200},
     \texttrademark            = {100,100},
     \textcopyright            = {100,100},
     \textregistered           = {100,100},
     \textdegree               = {300,300},
   }

%%% -----------------------------------------------------------------------
%%% INTERWORD SPACING

\SetExtraSpacing
   [ name = default ]
   { encoding = {OT1,T1,LY1,OT4,QX,T5} }
   {
     {,} = { ,-500,500},
      r  = { ,-300,300},
      b  = { ,-200,200},
      d  = { ,-200,200},
      f  = { ,-200,200},
      h  = { ,-200,200},
      k  = { ,-200,200},
      l  = { ,-200,200},
      t  = { ,-200,200},
      c  = { ,-100,100},
      p  = { ,-100,100},
      v  = { ,-100,100},
      w  = { ,-100,100},
      z  = { ,-100,100},
      x  = { ,-100,100},
      y  = { ,-100,100},
      i  = { , 50, -50},
      m  = { , 50, -50},
      n  = { , 50, -50},
      u  = { , 50, -50},
      :  = { ,200,-200},
      ;  = { ,200,-200},
      .  = { ,250,-250},
      !  = { ,250,-250},
      ?  = { ,250,-250}
   }

\SetExtraSpacing
   [ name     = nonfrench-default,
     load     = default,
     context  = nonfrench ]
   { encoding = {OT1,T1,LY1,OT4,QX,T5} }
   {
     . = {240,2000,-667},
     ? = {240,2000,-667},
     ! = {240,2000,-667},
     : = {240,1000,-500},
     ; = {   , 500,-333},
    {,}= {   , 250,-200}
   }

\SetExtraSpacing
   [ name = empty ]
   { encoding = {TS1} }
   { }

%%% -----------------------------------------------------------------------
%%% ADDITIONAL KERNING

\SetExtraKerning
   [ name = empty ]
   { encoding = {OT1,T1,T2A,LY1,OT4,QX,T5,TS1} }
   { }

\SetExtraKerning
   [ name     = french-default,
     context  = french,
     unit     = space   ]
   { encoding = {OT1,T1,LY1} }
   {
     :  = {1000,}, % = \fontdimen2
     ;  = {500, }, % ~ \thinspace
     !  = {500, },
     ?  = {500, }
   }

\SetExtraKerning
   [ name     = french-guillemets,
     context  = french-guillemets,
     load     = french-default,
     unit     = space   ]
   { encoding = {T1,LY1} }
   {
    \guillemotleft  = { ,800}, % = 0.8\fontdimen2
    \guillemotright = {800, }
   }

\SetExtraKerning
   [ name     = french-guillemets-OT1,
     context  = french-guillemets,
     load     = french-default,
     unit     = space   ]
   { encoding = OT1     }
   { }

\SetExtraKerning
   [ name     = turkish,
     context  = turkish ]
   { encoding = {OT1,T1,LY1} }
   {
     :  = {167, }, % = \thinspace
     !  = {167, },
    {=} = {167, }
   }

\endinput
%%
%% End of file `microtype.cfg'.
